---
export const partial = true

import TasksList from '@components/app/tasks/TasksList.astro'

import { deleteTask, updateTask } from '@data/pocketbase'

const { task_id = '', project_id = '' } = Astro.params

if (Astro.request.method === 'DELETE') {
  try {
    await deleteTask(task_id)
  } catch (e) {
    return new Response('An error occurred', {
      status: 400,
    })
  }
  return new Response(null, { status: 200 })
}

if (Astro.request.method === 'PUT') {
  const formData = await Astro.request.formData()
  const action = formData.get('action') as string

  try {
    switch (action) {
      case 'check':
        await updateTask(task_id, {
          completed: true,
          completed_on: new Date().toISOString(),
        })
        break
      case 'uncheck':
        await updateTask(task_id, {
          completed: false,
          completed_on: '',
        })
        break
      case 'star':
        await updateTask(task_id, {
          starred: true,
          starred_on: new Date().toISOString(),
        })
        break
      case 'unstar':
        await updateTask(task_id, {
          starred: false,
          starred_on: '',
        })
        break
      case 'edit-text':
        await updateTask(task_id, {
          text: formData.get('task-text') as string,
        })
        break
      case 'upload':
        try {
          await updateTask(task_id, {
            images: formData.getAll('images') as string[],
          })
        } catch (e) {
          return new Response('Cannot upload image', {
            status: 400,
          })
        }
        break
      case 'delete-image':
        await updateTask(task_id, {
          //@ts-expect-error
          'images-': formData.get('image') as string,
        })
        break
      default:
        return new Response('Invalid action', {
          status: 400,
        })
    }
  } catch (e) {
    return new Response('An error occurred', {
      status: 400,
    })
  }
}
---

<div id='tasks-todo' hx-swap-oob='true'>
  <TasksList done={false} project_id={project_id} />
</div>

<div id='tasks-done' hx-swap-oob='true'>
  <TasksList done={true} project_id={project_id} />
</div>

<div id='starred-tasks-list' hx-swap-oob='true'>
  <TasksList starred={true} />
</div>
